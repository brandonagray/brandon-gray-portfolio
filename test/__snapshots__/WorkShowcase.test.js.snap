// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WorkShowcase component should render the work showcase 1`] = `
.c7 svg {
  width: 3vh;
  height: 3vh;
  stroke: #FFFFFF;
}

.c6 {
  -webkit-animation-name: dTtlGn;
  animation-name: dTtlGn;
  -webkit-animation-duration: 3s;
  animation-duration: 3s;
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
  -webkit-animation-timing-function: ease-in-out;
  animation-timing-function: ease-in-out;
}

.c0 {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  width: 75%;
  height: auto;
  margin-bottom: 10vh;
  cursor: pointer;
  color: #F6F6F6;
  border-radius: 5px;
  display: grid;
  padding: 0 5% 0 5%;
  grid-template-rows: auto;
  grid-template-areas: "title" "role" "desc" "indicator";
  background: url(/img/experience/sdwanportal.jpg) center/cover;
  -webkit-filter: grayscale(50%);
  filter: grayscale(50%);
  -webkit-transition: all 0.2s ease-in;
  transition: all 0.2s ease-in;
  -webkit-transition: width 0.75s ease,height 0.75s ease;
  transition: width 0.75s ease,height 0.75s ease;
}

.c0:before {
  content: ' ';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  box-shadow: 0 10px 50px 0 rgba(0,0,0,0.6);
  border-radius: 5px;
  opacity: 0;
  -webkit-transition: opacity 500ms;
  transition: opacity 500ms;
}

.c0:after {
  content: ' ';
  position: absolute;
  z-index: 5;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  border-radius: 5px;
  background-color: rgba(0,0,0,0.6);
  opacity: 1;
  -webkit-transition: opacity 500ms;
  transition: opacity 500ms;
}

.c1 {
  font-size: 4vw;
  font-weight: bold;
  position: relative;
  z-index: 6;
  bottom: 0;
  grid-area: title;
  white-space: nowrap;
  padding-top: 1.5em;
  padding-bottom: 2px;
}

.c3 {
  position: absolute;
  z-index: 6;
  top: -5vh;
  right: -5vw;
  max-width: 25vw;
  max-height: 25vh;
  opacity: 0;
  -webkit-transition: all 0.3s ease-in;
  transition: all 0.3s ease-in;
}

.c2 {
  grid-area: role;
  position: relative;
  z-index: 6;
  font-size: 2vw;
  padding-bottom: 1.5em;
}

.c4 {
  grid-area: desc;
  -webkit-align-self: start;
  -ms-flex-item-align: start;
  align-self: start;
  padding-bottom: 0;
  line-height: 1.5;
  font-size: 2.5vmin;
  z-index: 6;
  max-width: 100%;
  max-height: 0;
  opacity: 0;
  -webkit-transition: max-height 1s,opacity 0.7s,padding 1s;
  transition: max-height 1s,opacity 0.7s,padding 1s;
}

.c5 {
  grid-area: indicator;
  z-index: 6;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  justify-self: center;
  margin-bottom: 1vw;
}

@media (max-width:64em) {
  .c0 {
    width: 85%;
    border-radius: 8px;
  }

  .c0:before,
  .c0:after {
    border-radius: 8px;
  }
}

@media (max-width:26.5625em) {
  .c0 {
    height: auto;
    width: 80%;
    padding: 0 10% 0 10%;
    margin-bottom: 4em;
    grid-template-rows: auto auto auto;
    grid-template-areas: "title" "role" "desc" "indicator";
  }
}

@media (max-width:64em) {
  .c1 {
    padding-top: 15vmin;
    font-size: 2.5em;
    -webkit-letter-spacing: 0;
    -moz-letter-spacing: 0;
    -ms-letter-spacing: 0;
    letter-spacing: 0;
  }
}

@media (max-width:26.5625em) {
  .c1 {
    font-size: 2.5em;
    position: relative;
    padding-top: 40vw;
    white-space: normal;
  }
}

@media (max-width:64em) {
  .c3 {
    top: -5vw;
    max-width: 20vmin;
    max-height: 25vmin;
  }
}

@media (max-width:26.5625em) {
  .c3 {
    top: -5vw;
    right: -8vw;
    max-width: 43vw;
    max-height: 60vw;
  }
}

@media (max-width:64em) {
  .c2 {
    font-size: 2em;
    padding-bottom: 1.5em;
  }
}

@media (max-width:26.5625em) {
  .c2 {
    font-size: 5vw;
  }
}

@media (max-width:64em) {
  .c4 {
    max-height: 0;
    padding-bottom: 0;
  }
}

@media (max-width:26.5625em) {
  .c4 {
    font-size: 1em;
    max-height: 0;
    padding-bottom: 0;
  }
}

<div
  class="c0"
>
  <span
    class="c1"
  >
    Nokia
  </span>
  <div
    class="c2"
  >
    Senior Web Software Designer
  </div>
  <img
    class="c3"
    src="/img/experience/nokia_logo.png"
  />
  <div
    class="c4"
  >
    I was responsible for the design, architecture and development of the client side of a next generation service.
  </div>
  <span
    class="c5"
  >
    <div
      class="c6"
      from="-3"
      to="0"
    >
      <span
        class="c7"
        color="#FFFFFF"
      >
        <svg
          fill="none"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          viewBox="0 0 24 24"
        >
          <path
            d="M6 9l6 6 6-6"
          />
        </svg>
      </span>
    </div>
  </span>
</div>
`;

exports[`WorkShowcase component should show description on click 1`] = `
.c7 svg {
  width: 3vh;
  height: 3vh;
  stroke: #FFFFFF;
}

.c6 {
  -webkit-animation-name: dTtlGn;
  animation-name: dTtlGn;
  -webkit-animation-duration: 3s;
  animation-duration: 3s;
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
  -webkit-animation-timing-function: ease-in-out;
  animation-timing-function: ease-in-out;
}

.c0 {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  width: 90%;
  height: auto;
  margin-bottom: 10vh;
  cursor: pointer;
  color: #F6F6F6;
  border-radius: 5px;
  display: grid;
  padding: 0 5% 0 5%;
  grid-template-rows: auto;
  grid-template-areas: "title" "role" "desc" "indicator";
  background: url(/img/experience/sdwanportal.jpg) center/cover;
  -webkit-filter: grayscale(50%);
  filter: grayscale(50%);
  -webkit-transition: all 0.2s ease-in;
  transition: all 0.2s ease-in;
  -webkit-transition: width 0.75s ease,height 0.75s ease;
  transition: width 0.75s ease,height 0.75s ease;
  -webkit-filter: none;
  filter: none;
  background: url(/img/experience/sdwanportal.jpg) center/cover;
}

.c0:before {
  content: ' ';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  box-shadow: 0 10px 50px 0 rgba(0,0,0,0.6);
  border-radius: 5px;
  opacity: 0;
  -webkit-transition: opacity 500ms;
  transition: opacity 500ms;
}

.c0:after {
  content: ' ';
  position: absolute;
  z-index: 5;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  border-radius: 5px;
  background-color: rgba(0,0,0,0.6);
  opacity: 1;
  -webkit-transition: opacity 500ms;
  transition: opacity 500ms;
}

.c0:before {
  opacity: 1;
}

.c0:after {
  opacity: 0.75;
}

.c1 {
  font-size: 4vw;
  font-weight: bold;
  position: relative;
  z-index: 6;
  bottom: 0;
  grid-area: title;
  white-space: nowrap;
  padding-top: 1.5em;
  padding-bottom: 2px;
}

.c3 {
  position: absolute;
  z-index: 6;
  top: -5vh;
  right: -5vw;
  max-width: 25vw;
  max-height: 25vh;
  opacity: 0;
  -webkit-transition: all 0.3s ease-in;
  transition: all 0.3s ease-in;
  opacity: 1;
}

.c2 {
  grid-area: role;
  position: relative;
  z-index: 6;
  font-size: 2vw;
  padding-bottom: 1.5em;
}

.c4 {
  grid-area: desc;
  -webkit-align-self: start;
  -ms-flex-item-align: start;
  align-self: start;
  padding-bottom: 2em;
  line-height: 1.5;
  font-size: 2.5vmin;
  z-index: 6;
  max-width: 100%;
  max-height: 7em;
  opacity: 1;
  -webkit-transition: max-height 1s,opacity 0.7s,padding 1s;
  transition: max-height 1s,opacity 0.7s,padding 1s;
}

.c5 {
  grid-area: indicator;
  z-index: 6;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  justify-self: center;
  margin-bottom: 1vw;
}

@media (max-width:26.5625em) {
  .c0:after {
    opacity: 0.85;
  }
}

@media (max-width:64em) {
  .c0 {
    width: 85%;
    border-radius: 8px;
  }

  .c0:before,
  .c0:after {
    border-radius: 8px;
  }
}

@media (max-width:26.5625em) {
  .c0 {
    height: auto;
    width: 80%;
    padding: 0 10% 0 10%;
    margin-bottom: 4em;
    grid-template-rows: auto auto auto;
    grid-template-areas: "title" "role" "desc" "indicator";
  }
}

@media (max-width:64em) {
  .c1 {
    padding-top: 15vmin;
    font-size: 2.5em;
    -webkit-letter-spacing: 0;
    -moz-letter-spacing: 0;
    -ms-letter-spacing: 0;
    letter-spacing: 0;
  }
}

@media (max-width:26.5625em) {
  .c1 {
    font-size: 2.5em;
    position: relative;
    padding-top: 40vw;
    white-space: normal;
  }
}

@media (max-width:64em) {
  .c3 {
    top: -5vw;
    max-width: 20vmin;
    max-height: 25vmin;
  }
}

@media (max-width:26.5625em) {
  .c3 {
    top: -5vw;
    right: -8vw;
    max-width: 43vw;
    max-height: 60vw;
  }
}

@media (max-width:64em) {
  .c2 {
    font-size: 2em;
    padding-bottom: 1.5em;
  }
}

@media (max-width:26.5625em) {
  .c2 {
    font-size: 5vw;
  }
}

@media (max-width:64em) {
  .c4 {
    max-height: 20em;
    padding-bottom: 3vw;
  }
}

@media (max-width:26.5625em) {
  .c4 {
    font-size: 1em;
    max-height: 30em;
    padding-bottom: 7vw;
  }
}

<WorkShowcase
  work={
    Object {
      "actionLinks": Array [],
      "bgImgSource": "/img/experience/sdwanportal.jpg",
      "color": "#9CCDA1",
      "desc": "I was responsible for the design, architecture and development of the client side of a next generation service.",
      "logoImgSource": "/img/experience/nokia_logo.png",
      "name": "Nokia",
      "role": "Senior Web Software Designer",
      "techStack": Array [
        Object {
          "color": "#8E2704",
          "icon": "devicons devicons-angular",
          "name": "Angular",
        },
        Object {
          "color": "#0062A8",
          "icon": "devicons devicons-javascript",
          "name": "TypeScript",
        },
        Object {
          "color": "#424242",
          "icon": "devicons devicons-webplatform",
          "name": "Webpack",
        },
        Object {
          "color": "#EE8407",
          "icon": "devicons devicons-html5",
          "name": "HTML",
        },
        Object {
          "color": "#4173D5",
          "icon": "devicons devicons-css3",
          "name": "CSS Grid",
        },
      ],
    }
  }
>
  <VisibilitySensor
    active={true}
    containment={null}
    delayedCall={false}
    intervalCheck={true}
    intervalDelay={100}
    minTopValue={0}
    offset={Object {}}
    onChange={[Function]}
    partialVisibility={false}
    resizeCheck={false}
    resizeDelay={250}
    resizeThrottle={-1}
    scrollCheck={false}
    scrollDelay={250}
    scrollThrottle={-1}
  >
    <styled.div
      bg="/img/experience/sdwanportal.jpg"
      expanded={true}
      focused={false}
      onClick={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      <StyledComponent
        bg="/img/experience/sdwanportal.jpg"
        expanded={true}
        focused={false}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  position: relative;
  margin-left: auto;
  margin-right: auto;
  width: ",
                [Function],
                ";
  height: auto;
  margin-bottom: 10vh;
  cursor: pointer;
  color: #F6F6F6;
  border-radius: 5px;

  display: grid;
  padding: 0 5% 0 5%;
  grid-template-rows: auto;
  grid-template-areas: \\"title\\"
                       \\"role\\"
                       \\"desc\\"
                       \\"indicator\\";

  background: url(",
                [Function],
                ") center/cover;
  filter: grayscale(50%);
  transition: all 0.2s ease-in;
  transition: width 0.75s ease, height 0.75s ease;

  /* Pseudo-element for shadow on container during focus */
  &:before {
    content: ' ';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    box-shadow: 0 10px 50px 0 rgba(0, 0, 0, 0.6);
    border-radius: 5px;

    opacity: 0;
    transition: opacity 500ms;
  }

  &:after {
    content: ' ';
    position: absolute;
    z-index: 5;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border-radius: 5px;
    background-color: rgba(0, 0, 0, 0.6);
    opacity: 1;
    transition: opacity 500ms;
  }

  ",
                [Function],
                "

  ",
                "
		@media (max-width: ",
                "64",
                "em) {
			",
                "
    width: 85%;
    border-radius: 8px;
    &:before, &:after {
      border-radius: 8px;
    }
  ",
                "
		}
	",
                "

  ",
                "
		@media (max-width: ",
                "26.5625",
                "em) {
			",
                "
    height: auto;
    width: 80%;
    padding: 0 10% 0 10%;
    margin-bottom: 4em;

    grid-template-rows: auto auto auto;
    grid-template-areas: \\"title\\"
                         \\"role\\"
                         \\"desc\\"
                         \\"indicator\\";
  ",
                "
		}
	",
                "

",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        onClick={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <div
          className="c0"
          onClick={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <styled.span>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bxivhb",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  font-size: 4vw;
  font-weight: bold;
  position: relative;
  z-index: 6;
  bottom: 0;
  grid-area: title;
  white-space: nowrap;
  padding-top: 1.5em;
  padding-bottom: 2px;

  ",
                      "
		@media (max-width: ",
                      "64",
                      "em) {
			",
                      "
    padding-top: 15vmin;
    font-size: 2.5em;
    letter-spacing: ",
                      "0",
                      ";
  ",
                      "
		}
	",
                      " ",
                      "
		@media (max-width: ",
                      "26.5625",
                      "em) {
			",
                      "
    font-size: 2.5em;
    position: relative;
    padding-top: 40vw;
    white-space: normal;
  ",
                      "
		}
	",
                      ";
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bxivhb",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c1"
              >
                Nokia
              </span>
            </StyledComponent>
          </styled.span>
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": true,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  grid-area: role;
  position: relative;
  z-index: 6;
  font-size: 2vw;
  padding-bottom: 1.5em;

  ",
                      "
		@media (max-width: ",
                      "64",
                      "em) {
			",
                      "
    font-size: 2em;
    padding-bottom: 1.5em;
  ",
                      "
		}
	",
                      " ",
                      "
		@media (max-width: ",
                      "26.5625",
                      "em) {
			",
                      "
    font-size: 5vw;
  ",
                      "
		}
	",
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c2"
              >
                Senior Web Software Designer
              </div>
            </StyledComponent>
          </styled.div>
          <styled.img
            expanded={true}
            focused={false}
            src="/img/experience/nokia_logo.png"
          >
            <StyledComponent
              expanded={true}
              focused={false}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-ifAKCX",
                    "isStatic": false,
                    "lastClassName": "c3",
                    "rules": Array [
                      "
  position: absolute;
  z-index: 6;
  top: -5vh;
  right: -5vw;
  max-width: 25vw;
  max-height: 25vh;

  opacity: 0;
  transition: all 0.3s ease-in;

  ",
                      [Function],
                      "

  ",
                      "
		@media (max-width: ",
                      "64",
                      "em) {
			",
                      "
    top: -5vw;
    max-width: 20vmin;
    max-height: 25vmin;
  ",
                      "
		}
	",
                      "

  ",
                      "
		@media (max-width: ",
                      "26.5625",
                      "em) {
			",
                      "
    top: -5vw;
    right: -8vw;
    max-width: 43vw;
    max-height: 60vw;
  ",
                      "
		}
	",
                      "
",
                    ],
                  },
                  "displayName": "styled.img",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-ifAKCX",
                  "target": "img",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              src="/img/experience/nokia_logo.png"
            >
              <img
                className="c3"
                src="/img/experience/nokia_logo.png"
              />
            </StyledComponent>
          </styled.img>
          <styled.div
            expanded={true}
          >
            <StyledComponent
              expanded={true}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": false,
                    "lastClassName": "c4",
                    "rules": Array [
                      "
  grid-area: desc;
  align-self: start;
  padding-bottom: ",
                      [Function],
                      ";
  line-height: 1.5;
  font-size: 2.5vmin;
  z-index: 6;
  max-width: 100%;
  max-height: ",
                      [Function],
                      ";
  opacity: ",
                      [Function],
                      ";
  transition: max-height 1s, opacity 0.7s, padding 1s;

  ",
                      "
		@media (max-width: ",
                      "64",
                      "em) {
			",
                      "
    max-height: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
  ",
                      "
		}
	",
                      " ",
                      "
		@media (max-width: ",
                      "26.5625",
                      "em) {
			",
                      "
    font-size: 1em;
    max-height: ",
                      [Function],
                      ";
    padding-bottom: ",
                      [Function],
                      ";
  ",
                      "
		}
	",
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c4"
              >
                I was responsible for the design, architecture and development of the client side of a next generation service.
              </div>
            </StyledComponent>
          </styled.div>
          <styled.span>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gzVnrw",
                    "isStatic": true,
                    "lastClassName": "c5",
                    "rules": Array [
                      "
  grid-area: indicator;
  z-index: 6;
  align-self: center;
  justify-self: center;
  margin-bottom: 1vw;
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gzVnrw",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c5"
              >
                <FloatText
                  from={-3}
                  to={0}
                >
                  <styled.div
                    from={-3}
                    to={0}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bwzfXH",
                            "isStatic": false,
                            "lastClassName": "c6",
                            "rules": Array [
                              "
  animation-name: ",
                              [Function],
                              ";
  animation-duration: ",
                              [Function],
                              "s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bwzfXH",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      from={-3}
                      to={0}
                    >
                      <div
                        className="c6"
                        from={-3}
                        to={0}
                      >
                        <Icon
                          color="#FFFFFF"
                          name="chevronUp"
                          size="3vh"
                        >
                          <styled.span
                            color="#FFFFFF"
                            size="3vh"
                          >
                            <StyledComponent
                              color="#FFFFFF"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "
  & svg {
    width: ",
                                      [Function],
                                      ";
    height: ",
                                      [Function],
                                      ";
    stroke: ",
                                      [Function],
                                      ";
    fill: ",
                                      [Function],
                                      ";
  }
",
                                    ],
                                  },
                                  "displayName": "styled.span",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": "span",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              size="3vh"
                            >
                              <span
                                className="c7"
                                color="#FFFFFF"
                                size="3vh"
                              >
                                <svg
                                  fill="none"
                                  strokeLinecap="round"
                                  strokeLinejoin="round"
                                  strokeWidth="2"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M18 15l-6-6-6 6"
                                  />
                                </svg>
                              </span>
                            </StyledComponent>
                          </styled.span>
                        </Icon>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </FloatText>
              </span>
            </StyledComponent>
          </styled.span>
        </div>
      </StyledComponent>
    </styled.div>
  </VisibilitySensor>
</WorkShowcase>
`;
