// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StatCounter component should render the stat counter 1`] = `
.c0 {
  display: inline-grid;
  grid-template-rows: auto auto;
  grid-template-areas: 'counter' 'desc';
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 {
  font-size: 3.5vw;
  grid-area: counter;
}

.c2 {
  grid-area: desc;
  font-size: 2.5vh;
}

@media (max-width:64em) {
  .c0 {
    max-width: 100%;
  }
}

@media (max-width:26.5625em) {
  .c0 {
    padding: 5%;
    justify-items: center;
    text-align: center;
  }
}

@media (max-width:64em) {
  .c1 {
    font-size: 4em;
  }
}

@media (max-width:26.5625em) {
  .c1 {
    font-size: 2em;
  }
}

@media (max-width:64em) {
  .c2 {
    font-size: 1.5em;
  }
}

@media (max-width:26.5625em) {
  .c2 {
    font-size: 1em;
  }
}

<StatCounter
  countStart={0}
  useEasing={true}
>
  <styled.span>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-grid;
  grid-template-rows: auto auto;
  grid-template-areas:
    'counter'
    'desc';
  align-items: center;

  ",
              "
		@media (max-width: ",
              "64",
              "em) {
			",
              "
    max-width: 100%;
  ",
              "
		}
	",
              " ",
              "
		@media (max-width: ",
              "26.5625",
              "em) {
			",
              "
    padding: 5%;
    justify-items: center;
    text-align: center;
  ",
              "
		}
	",
              ";
",
            ],
          },
          "displayName": "styled.span",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <span
        className="c0"
      >
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  font-size: 3.5vw;
  grid-area: counter;

  ",
                    "
		@media (max-width: ",
                    "64",
                    "em) {
			",
                    "
    font-size: 4em;
  ",
                    "
		}
	",
                    " ",
                    "
		@media (max-width: ",
                    "26.5625",
                    "em) {
			",
                    "
    font-size: 2em;
  ",
                    "
		}
	",
                    ";
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c1"
            >
              <CountUp
                decimal="."
                decimals={0}
                duration={250}
                easingFn={null}
                end={100}
                formattingFn={null}
                prefix=""
                redraw={false}
                separator=""
                start={0}
                suffix=""
                useEasing={true}
              >
                <span>
                  0
                </span>
              </CountUp>
            </span>
          </StyledComponent>
        </styled.span>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": true,
                  "lastClassName": "c2",
                  "rules": Array [
                    "
  grid-area: desc;
  font-size: 2.5vh;
  ",
                    "
		@media (max-width: ",
                    "64",
                    "em) {
			",
                    "
    font-size: 1.5em;
  ",
                    "
		}
	",
                    " ",
                    "
		@media (max-width: ",
                    "26.5625",
                    "em) {
			",
                    "
    font-size: 1em;

  ",
                    "
		}
	",
                    ";
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c2"
            >
              "Tests Created"
            </span>
          </StyledComponent>
        </styled.span>
      </span>
    </StyledComponent>
  </styled.span>
</StatCounter>
`;
